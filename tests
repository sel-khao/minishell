Your shell parser basically is a smarter version of split() — but with extra logic to handle:

Quotes (grouping spaces inside quotes)

Escape sequences (like \ or \")

Whitespace trimming between tokens

Syntax errors (like unclosed quotes)

_________________________________________________________
errors:

';; test'

'echo "hello"' is invalid because double quotes
cannot be nested inside single quotes
_________________________________________________________
valid:


_________________________________________________________


1	echo hello world	["echo", "hello", "world"]
2	echo 'hello'	["echo", "hello"]
3	echo "hello"	["echo", "hello"]
4	echo 'hello world'	["echo", "hello world"]
5	echo "hello world"	["echo", "hello world"]
6	echo 'hello "world"'	["echo", 'hello "world"']
7	echo "hello 'world'"	["echo", "hello 'world'"]
8	echo 'hello world	❌ Syntax error: unclosed single quote
9	echo "hello world	❌ Syntax error: unclosed double quote
10	echo hello 'world	❌ Syntax error: unclosed single quote
11	echo hello "world	❌ Syntax error: unclosed double quote
12	echo 'hello"world'	["echo", 'hello"world']
13	echo "hello'world"	["echo", "hello'world"]
14	echo hello\ world	["echo", "hello world"]
15	echo hello\ "world"	["echo", "hello world"]
16	echo \"hello\"	["echo", '"hello"']
17	echo \'hello\'	["echo", "'hello'"]
18	echo "hello $USER"	✅ (expands USER) → e.g. ["echo", "hello bob"]
19	echo '$USER'	["echo", "$USER"] (no expansion in single quotes)
20	echo "The path is: \"$HOME\""	✅ (expands HOME) → ["echo", "The path is: \"/home/bob\""]
21	echo 'Nested "quotes" are here'	["echo", 'Nested "quotes" are here']
